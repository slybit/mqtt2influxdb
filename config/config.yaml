# One of 'error', 'warn', 'info', 'verbose', debug', 'silly'
loglevel: 'verbose'
ESlogging:
    enabled: true
    label: MQTT2INFLUXDB
    loglevel: info
    options:
        indexPrefix: logs
        clientOpts:
            node: http://es.elastic.home
# Set to true to also parse retain messages at start up
retained: false
# Configuration passed to the node-influx library
influx:
  database: 'mqtt2influx'
  host: 'influxdb.k3s.home'
  port: 80
  retentionPolicies:
  - name: 14d
    duration: 14d
mqtt:
  # URL to MQTT broker
  url: 'mqtt://192.168.1.25'
  # Configuration passed to the MQTT library
  options:
    username: 'mqtt_username'
    password: 'mqtt_password'
topics:
  - "test/#"
instants:
  - regex: 'test'
    measurement: 'test'
    fields:
      value: '{{M.test | multiply:1000}}'
    continue: true
  - regex: 'test'
    measurement: 'test'
    fields:
      value: '{{M.test | multiply:1000}}'
stats:
      # knx/status/verlichting/Status_aan_uit/Eettafel_(S16)
    - regex: 'knx\/status\/verlichting\/Status_aan_uit\/(.*\D.*)'
      measurement: 'stats/knx/verlichting'
      tags:
        label: '{{T.1}}'
        dstgad: '{{{M.dstgad}}}'
      interval: 10   # unit = 30 seconds; so interval 10 = 300 seconds = 5 minutes
      retentionPolicy: 14d
      fields:
        - name: 'average'
          op: 'avg'      # avg, max, min, add
          source: '{{M.val}}'
        - name: 'count'
          op: 'add'      # avg, max, min, add
          source: 1
    - regex: 'test\/(.*\D.*)'
      measurement: 'stats/test'
      tags:
        label: '{{T.1}}'
      interval: 1   # unit = 30 seconds; so interval 10 = 300 seconds = 5 minutes
      retentionPolicy: 14d
      fields:
        - name: 'average'
          op: 'avg'      # avg, max, min, add
          source: '{{M.val}}'
        - name: 'count'
          op: 'add'      # avg, max, min, add
          source: 1
